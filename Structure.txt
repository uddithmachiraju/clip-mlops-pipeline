ðŸ“¦ CLIP-MLOps-Pipeline
â”œâ”€â”€ ðŸ“‚ src/                     # Source code
â”‚   â”œâ”€â”€ ðŸ“‚ models/              # Model-related files
â”‚   â”‚   â”œâ”€â”€ image_encoder.py
â”‚   â”‚   â”œâ”€â”€ text_encoder.py
â”‚   â”‚   â”œâ”€â”€ transformer_encoder.py
â”‚   â”‚   â”œâ”€â”€ attn_head.py
â”‚   â”‚   â”œâ”€â”€ pos_embeds.py
â”‚   â”‚   â”œâ”€â”€ model.py
â”‚   â”œâ”€â”€ ðŸ“‚ data/                # Data processing
â”‚   â”‚   â”œâ”€â”€ dataset.py
â”‚   â”‚   â”œâ”€â”€ config.py
â”‚   â”œâ”€â”€ ðŸ“‚ training/            # Training and evaluation
â”‚   â”‚   â”œâ”€â”€ train.py
â”‚   â”‚   â”œâ”€â”€ evaluate.py
â”‚   â”‚   â”œâ”€â”€ test.py
â”‚   â”œâ”€â”€ ðŸ“‚ api/                 # Model serving API
â”‚   â”‚   â”œâ”€â”€ main.py             # FastAPI app 
â”‚   â”‚   â”œâ”€â”€ Dockerfile          # API containerization
â”‚   â”œâ”€â”€ ðŸ“‚ utils/               # Utility functions
â”‚   â”‚   â”œâ”€â”€ preprocess.py
â”‚   â”‚   â”œâ”€â”€ postprocess.py
â”‚   â”œâ”€â”€ ðŸ“‚ tests/               # Unit & integration tests
â”‚   â”‚   â”œâ”€â”€ test_data.py
â”‚   â”‚   â”œâ”€â”€ test_model.py
â”‚   â”‚   â”œâ”€â”€ test_api.py
â”œâ”€â”€ ðŸ“‚ mlflow/                  # MLflow experiment tracking
â”‚   â”œâ”€â”€ mlflow_server.sh        # Script to start MLflow server
â”‚   â”œâ”€â”€ tracking.py             # MLflow tracking setup
â”œâ”€â”€ ðŸ“‚ docker/                  # Docker configurations
â”‚   â”œâ”€â”€ Dockerfile              # Base image for training
â”‚   â”œâ”€â”€ docker-compose.yml      # Multi-container setup
â”œâ”€â”€ ðŸ“‚ ci-cd/                   # CI/CD setup
â”‚   â”œâ”€â”€ Jenkinsfile             # Jenkins pipeline
â”‚   â”œâ”€â”€ run_tests.sh            # Script for automated tests
â”œâ”€â”€ ðŸ“‚ results/                 # Results and analysis
â”‚   â”œâ”€â”€ Accuracy.png
â”‚   â”œâ”€â”€ Predictions.png
â”‚   â”œâ”€â”€ Sample.png
â”œâ”€â”€ README.md                   # Project documentation
â”œâ”€â”€ requirements.txt 
â”œâ”€â”€ .gitignore                   # Ignore unnecessary files
